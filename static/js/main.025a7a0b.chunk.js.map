{"version":3,"sources":["components/Alerts.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alerts","props","alerts","class","type","role","msg","Navbar","className","mode","href","title","id","target","rel","onClick","toggleMode","htmlhtmlFor","TextForm","useState","text","setText","htmlFor","heading","rows","onChange","event","console","log","value","placeholder","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","length","App","setAlerts","showAlerts","message","setTimeout","Mode","setMode","body","style","backgroundColor","border","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.025a7a0b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Alerts(props) {\n  return (\n        props.alerts && <div class={`alert alert-${props.alerts.type} alert-dismissible fade show`} role=\"alert\">\n          <strong>{props.alerts.type}</strong>: {props.alerts.msg}\n        </div>\n  );\n}\n\nexport default Alerts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            {props.title}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Home\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  href=\"https://github.com/Adamya1234\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              </li>\n              \n            </ul>\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n              <input\n              onClick={props.toggleMode}\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                role=\"switch\"\n                id=\"flexSwitchCheckDefault\"\n              />\n              <label className=\"form-check-label\" htmlhtmlFor=\"flexSwitchCheckDefault\">\n                Enable Dark Mode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n};\n","import React,{ useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './App.css';\n\n\nexport default function TextForm(props) {\n    const handleUpperCaseClick = ()=>{\n        console.log('UpperCase is click ed')\n        setText(text.toUpperCase())\n        props.showAlert(\"Your text has been converted to upper case\",\"success\")\n    }\n    const handleLowerCaseClick = ()=>{\n        console.log('Lowercase is click ed')\n        setText(text.toLowerCase())\n        props.showAlert(\"Your text has been converted to lower case\",\"success\")\n\n    }\n    const handleOnChange = (event)=>{\n        console.log('UpperCase is clicked')\n        setText(event.target.value)\n    }\n    const handleClearClick = ()=>{\n        console.log('clear is clicked')\n        setText(\"\")\n        props.showAlert(\"Cleared\",\"success\")\n\n    }\n    const handleCopy = ()=>{\n        var text = document.getElementById(\"myBox\")\n        text.select()\n        text.setSelectionRange(0,999999)\n        navigator.clipboard.writeText(text.value)\n        props.showAlert(\"Your text has been copied to clipboard\",\"success\")\n\n    }\n    const handleEntraSpace = ()=>{\n        let newText = text.split(/[ ]+/)\n        setText(newText.join(\" \"))\n        props.showAlert(\"Extra Spaces removed\",\"success\")\n\n    }\n    const handleEntraLine = ()=>{\n        let newText = text.split(\"\\n\")\n        setText(newText.join(\" \"))\n        props.showAlert(\"Entra Lines removed\",\"success\")\n\n    }\n    const [text, setText] = useState('')\n    return (\n        <>\n        <div className=\"container\">\n        <div className=\"mb-3\">\n            <label htmlFor=\"myBox\" className=\"form-label\"><h1>{props.heading}</h1></label>\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"5\" onChange={handleOnChange} value={text} placeholder=\"Enter some text\"></textarea>\n        </div>\n        <p><button className=\"btn btn-outline-info mx-3\" onClick={handleUpperCaseClick}>Convert To Uppercase</button></p>\n        <p><button className=\"btn btn-outline-info mx-3\" onClick={handleLowerCaseClick}>Convert To LowerCase</button></p>\n        <p><button className=\"btn btn-outline-info mx-3\" onClick={handleClearClick}>Clear Text</button></p>\n        <p><button className=\"btn btn-outline-info mx-3\" onClick={handleCopy}>Copy Text</button></p>\n        <p><button className=\"btn btn-outline-info mx-3\" onClick={handleEntraSpace}>Remove Extra Spaces</button></p>\n        <p><button className=\"btn btn-outline-info mx-3\" onClick={handleEntraLine}>Remove Extra Lines</button></p>\n        </div>\n        <div className=\"container my-4\">\n            <h2>Your text Summary--</h2>\n            <h4>Letters--{text.length}    &nbsp; &nbsp; &nbsp; &nbsp;||    &nbsp; &nbsp; &nbsp; &nbsp; Words--{text.split(\" \").length}</h4>\n            <h2 className=\"my-4\" id=\"Preview\">Preview</h2>\n            <p className=\"my-3\" id=\"Preview-content\">{text}</p>\n        </div>\n        </>\n    )\n}\n\nTextForm.propTypes = {\n    heading : PropTypes.string\n}\n\n","\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alerts from './components/Alerts';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alerts, setAlerts] = useState(null)\n\n  const showAlerts = (message ,type)=>{\n     setAlerts({\n       msg: message,\n       type: type\n     })\n     setTimeout(() => {\n       setAlerts(null)\n     }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(Mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#2f363d'\n      document.body.style.border = 'black'\n      document.body.style.color = 'white'\n      showAlerts(\"Dark mode is been enabled\",\"success\")\n\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlerts(\"Dark mode is been disabled\", \"warning\")\n    }\n  }\n  const [Mode, setMode] = useState('light')\n  return (\n    <>\n     <Navbar title=\"TextUtilsIO\" mode={Mode} toggleMode={toggleMode}/>\n       <Alerts alerts={alerts}/>\n     <div className=\"container my-4\">\n     {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About /> */}\n          {/* </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlerts} heading=\"Enter the text to analyze -- \"/>\n          {/* </Route>\n        </Switch> */}\n        {/* <About></About> */}\n     </div>\n     </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}